name: CI/CD Workflow

on:
  push:
    branches:
      - main
  release:
    types: [created]

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'  # Adjust Python version as necessary

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  run-tests:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'  # Adjust Python version as necessary

      - name: Run Tests
        run: |
          pip install -r requirements.txt
          pytest  # Assumes your tests are managed by pytest

  build:
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Build Application
        run: |
          # Replace this command with your build process
          echo "Building application..."

  deploy-staging:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/staging'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Deploy to Staging
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTNAME }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /home/ubuntu/flask_app  # Adjust the path as necessary
            git pull origin staging
            # Install dependencies if required
            pip install -r requirements.txt
            # Restart the Flask app using systemctl
            sudo systemctl restart flask_app

  deploy-production:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Deploy to Production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTNAME }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /home/ubuntu/flask_app  # Adjust the path as necessary
            git pull origin main
            # Install dependencies if required
            pip install -r requirements.txt
            # Restart the Flask app using systemctl
            sudo systemctl restart flask_app
